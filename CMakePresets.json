{
  "version": 3,
  "cmakeMinimumRequired": {
    "major": 3,
    "minor": 21,
    "patch": 0
  },
  "configurePresets": [
    {
      "name": "dev-mode",
      "hidden": true,
      "cacheVariables": {
        "CLOX_DEVELOPER_MODE": "ON"
      }
    },
    {
      "name": "vcpkg",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_TOOLCHAIN_FILE": "$env{VCPKG_ROOT}/scripts/buildsystems/vcpkg.cmake"
      }
    },
    {
      "name": "vcpkg-win64-static",
      "hidden": true,
      "cacheVariables": {
        "VCPKG_TARGET_TRIPLET": "x64-windows-static-md"
      }
    },
    {
      "name": "cppcheck",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_CPPCHECK": "cppcheck;--inline-suppr"
      }
    },
    {
      "name": "clang-tidy",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_CLANG_TIDY": "clang-tidy;--use-color;--header-filter=^${sourceDir}/"
      }
    },
    {
      "name": "std-tgt",
      "description": "This preset makes sure the project actually builds with at least the specified standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_EXTENSIONS": "OFF",
        "CMAKE_C_STANDARD": "99",
        "CMAKE_C_STANDARD_REQUIRED": "ON"
      }
    },
    {
      "name": "flags-gcc-clang",
      "description": "These flags are supported by both GCC and Clang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_FLAGS": "-fstack-protector-strong -fcf-protection=full -fstack-clash-protection -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Werror=strict-prototypes -Wwrite-strings",
        "CMAKE_EXE_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen",
        "CMAKE_SHARED_LINKER_FLAGS": "-Wl,--allow-shlib-undefined,--as-needed,-z,noexecstack,-z,relro,-z,now,-z,nodlopen"
      }
    },
    {
      "name": "flags-appleclang",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_FLAGS": "-fstack-protector-strong -Wall -Wextra -Wpedantic -Wconversion -Wsign-conversion -Wcast-qual -Wformat=2 -Wundef -Werror=float-equal -Wshadow -Wcast-align -Wunused -Wnull-dereference -Wdouble-promotion -Wimplicit-fallthrough -Werror=strict-prototypes -Wwrite-strings"
      }
    },
    {
      "name": "flags-msvc",
      "description": "Note that all the flags after /W4 are required for MSVC to conform to the language standard",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_C_FLAGS": "/sdl /guard:cf /utf-8 /diagnostics:caret /w14165 /w44242 /w44254 /w34287 /w44296 /w44365 /w44388 /w44464 /w14545 /w14546 /w14547 /w14549 /w14555 /w34619 /w44774 /w44777 /w24826 /w14905 /w14906 /w14928 /W4 /permissive- /volatile:iso /Zc:inline /Zc:preprocessor",
        "CMAKE_EXE_LINKER_FLAGS": "/machine:x64 /guard:cf"
      }
    },
    {
      "name": "linux-build",
      "inherits": [
          "flags-gcc-clang",
          "std-tgt"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }
    },
    {
      "name": "darwin",
      "inherits": [
          "flags-appleclang",
          "std-tgt"
      ],
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }

    },
    {
      "name": "win64",
      "inherits": [
          "flags-msvc",
          "std-tgt"
      ],
      "architecture": "x64",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Release"
      }

    },
    {
      "name": "coverage-linux",
      "binaryDir": "${sourceDir}/build/coverage",
        "inherits": "linux-build",
      "hidden": true,
      "cacheVariables": {
        "ENABLE_COVERAGE": "ON",
        "CMAKE_BUILD_TYPE": "Coverage",
        "CMAKE_C_FLAGS_COVERAGE": "-Og -g --coverage -fkeep-inline-functions -fkeep-static-functions",
        "CMAKE_EXE_LINKER_FLAGS_COVERAGE": "--coverage",
        "CMAKE_SHARED_LINKER_FLAGS_COVERAGE": "--coverage"
      }
    },
    {
      "name": "coverage",
      "inherits": [
          "coverage-linux",
          "dev-mode",
          "vcpkg"
      ],
      "cacheVariables": {
        "COVERAGE_HTML_COMMAND": ""
      }
    },
    {
      "name": "sanitize",
      "binaryDir": "${sourceDir}/build/sanitize",
      "inherits": [
          "linux",
          "dev-mode",
          "vcpkg"
      ],
      "cacheVariables": {
        "CMAKE_BUILD_TYPE": "Sanitize",
        "CMAKE_C_FLAGS_SANITIZE": "-U_FORTIFY_SOURCE -O2 -g -fsanitize=address,undefined -fno-omit-frame-pointer -fno-common"
      }
    },
    {
      "name": "build",
      "binaryDir": "${sourceDir}/build",
      "hidden": true
    },
    {
      "name": "multi-config",
      "description": "Speed up multi-config generators by generating only one configuration instead of the defaults",
      "hidden": true,
      "cacheVariables": {
        "CMAKE_CONFIGURATION_TYPES": "Release"
      }
    },
    {
      "name": "macos",
      "inherits": [
          "build",
          "darwin",
          "multi-config",
          "vcpkg"
      ]
    },
    {
      "name": "linux",
      "inherits": [
          "build",
          "linux-build",
          "vcpkg"
      ]
    },
    {
      "name": "windows",
      "inherits": [
          "build",
          "win64",
          "multi-config",
          "vcpkg",
          "vcpkg-win64-static"
      ]
    }
  ]
}
